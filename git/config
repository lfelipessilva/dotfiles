[init]
	defaultBranch = main
[user]
	email = luis.felipeszsv@gmail.com
    name = Luis Felipe
[alias]
  co = checkout
  coc = checkout .
  cob = checkout -b

  c = commit -m
  ci = commit
  ca = commit -a
  cam = commit --amend

  fuck = reset
  res = reset
  resa = reset HEAD

  tags = tag -l

  l = log
  pg = diff
  pgs = diff --staged
  pa = apply

  f = fetch
  fa = fetch --all
  fo = fetch origin

  m = merge --no-edit
  unm = reset --merge

  ps = push
  psu = push -u

  pl = pull
  plo = pull origin

  s = status
  sttc = !git status | grep typechange | awk '{print $2}' $@
  stmo = !git status | grep modified | awk '{print $2}' $@

  a = add
  aa = add --all
  af = add --all -f
  ap = add -p

  untracked = ls-files --other --exclude-standard
  staged = ls-files --staged
  modified = ls-files --modified
  deleted = ls-files --deleted
  gitignored = ls-files -o -i --exclude-standard
  sig = !git ls-files -v | grep "^[[:lower:]]"

  sh = stash
  shp = stash pop
  shl = stash list
  shd = stash drop
  shc = stash clear
  sha = stash apply

  chp = cherry-pick
  chpc = cherry-pick --continue
  chpq = cherry-pick --quit
  chpa = cherry-pick --abort

  rv = revert
  rvc = revert --continue
  rva = revert --abort

  am3 = am -3
  amr = am --resolved
  amc = am --continue
  ama = am --abort
  ams = am --skip

  fm = format-patch

  rb = rebase
  rbad = rebase --committer-date-is-author-date
  rbi = rebase -i
  rbtc = !git theirs `git unmerged` || git resolve-unmerged && (git rbc || git rbs)
  rboc = !git ours `git unmerged` || git reset `git unmerged` && git a . && (git rbc || git rbs)
  rbc = rebase --continue
  rba = rebase --abort
  rbs = rebase --skip

  squash = !"f() { NL=$1; GIT_EDITOR=\"sed -i '2,$NL s/pick/squash/;/# This is the 2nd commit message:/,$ {d}'\"; git rebase -i HEAD~$NL; }; f"
  sq = !git squash $1
  sqpsf = !git squash $1 && git psf

  bs = bisect
  bsr = bisect reset
  bsb = bisect bad
  bsg = bisect good

  mt = mergetool

  vm = !vim `git unmerged`
  vmo = !vim `git modified`
  vt = !vim `git untracked`
  vim-unmerged = !git vm # deprecated

  current = rev-parse --abbrev-ref HEAD
  br = branch
  brc = rev-parse --abbrev-ref HEAD
  brt = branch --track
  brup = branch --set-upstream
  bra = !git branch -a | less -FiRS
  brrecent = !git for-each-ref --sort=-committerdate refs/heads/
  brar = "!f() { git bra | grep remotes/$1/ | cut -f 3 -d '/'; }; f"
  brd = branch -D
  brco = branch --contains
